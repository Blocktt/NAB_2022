---
title: "RShiny and RMarkdown:Solutions to static reporting methods and perhaps the death of MS Word"
author: "<p>Ben Block</p>"
date: "`r format(Sys.time(), '%d %B, %Y')`"

output:
  html_document:
    theme: flatly
    highlight: pygments
    #css: styles.css
    number_sections: false
    fig_caption: true
    toc: true
    toc_float: true
    
---

```{r global_options, include=FALSE}
knitr::opts_chunk$set(warning=FALSE)
```

# Content 

1. Engaging constituents is important
2. Documents need to be digestible
3. Many orgs use science communication tools
4. User design should be considered
    <!-- + Main Libraries -->
5. R Shiny can achieve these goals
6. Case study: This app!
7. Other considerations
8. Conclusions
9. References and Resources

## 1. Engaging constituents is important

>Informed and Involved Public Goal: Basin residents and visitors will understand and appreciate Lake Champlain Basin resources, and will possess a sense of personal responsibility that results in behavioral changes and actions to reduce pollution. ~ Lake Champlain Basin Program Opportunities for Action.

* Ensure residents and visitors understand and appreciate natural resources
* Encourage a sense of personal responsibility and stewardship
* Inform civic leaders and policy makers on important issues
* Improve communication, science literacy, equity, and inclusion

## 2. Documents need to be digestible

* Formal documents, required by the federal government, are necessary
* Not everyone has time to read formal documents front to back
* Integrated Report length by state (not including appendices):

```{r error = F, warning = F, message = F, include=FALSE}
library(dplyr)
library(knitr)
library(kableExtra)

States <- c("Connecticut", "Maine", "Massachusetts", "New Hampshire"
            , "New York", "Rhode Island", "Vermont")
pg_len <- c(62, 212, 225, 119, 91, 56, 52)

table1 <- as.data.frame(cbind(States, pg_len))

table1 <- table1 %>% 
  rename(State = States, `Report Length (Pages)` = pg_len)

table1 %>%
  kable() %>%
  kable_styling(full_width = F, position = "center")

```


* [CT DEEP 2020 IWQR Factsheet](https://portal.ct.gov/-/media/DEEP/water/water_quality_management/305b/2020/IWQR2020Factsheet.pdf) is great! Could be dynamic!

## 3. Many orgs use science communication tools

* Puts information at the fingertips of stakeholders, public, and policy makers
* Examples include John Hopkins and NY Times COVID-19 resources

<!-- <img src="www/technology.jpg" width="100%"/> -->

## 4. User design should be considered
## 5. R Shiny can achieve these goals

* R Shiny is a framework for creating web apps using R code
* Does not require knowledge of HTML, CSS, or JavaScript
* Every Shiny app is maintained by a computer or server running R

* Can range from ultra-basic to completely customized
    + https://shiny.rstudio.com/gallery/
    + Simple option to use styling options include shinythemes and bslib packages
    + Can be enhanced by CSS and HTML coding experience
* Hosted on shinyapps.io â€“ accessible by anyone with internet connection
    + Free or reasonably priced

## 6. Case study: This app!
## 7. Other considerations

* Options to make data publicly accessible - via GitHub
* Hosting R Shiny apps on your website
* Consider adding other media forms
* Share via social media
* Tetra Tech has broad experience making technical and non-technical content

## 8. Conclusions
* R Shiny is an excellent platform to create custom interactive outreach materials
* Formal documents are well suited for the government but not the public
* Science communication should be considered in every project
    + Maximize impact by including sci comm in all future projects
* **Public outreach should be a priority**

## 9. References and Resources
* Shiny Tutorials (https://shiny.rstudio.com/tutorial/)
* Markdown Tutorials (https://rmarkdown.rstudio.com/lesson-1.html)
* Shiny Gallery of Ideas (https://shiny.rstudio.com/gallery/)
* Markdown Gallery of Ideas (https://rmarkdown.rstudio.com/gallery.html)
* Mastering Shiny eBook (https://mastering-shiny.org/)
* Datacamp Self-Paced Tutorials (www.datacamp.com)